!!! ATTRIBUTE LISTS !!!

number = sg pl sp ND ;
case = (CD nom) nom acc gen dat loc abl subj obj CD ;
transitivity = tv iv ;
poss = px1sg px1pl px2sg px2pl px3sp ;
person = (PD p3) p1 p2 p3 PD ;
formality = frm ;
det_type = def ind dem itg ;
prn_type = pers pos ;
tense = pres aor past ifi fut ;
ger = ger ger_past ;

!!! MAPPINGS !!!

case > case : subj nom, obj acc ;
tense > tense : pres aor ;
lemh > case : of gen, in loc, at loc, on loc ;

!!! OUTPUT PATTERNS !!!

pr: _ ;
vb: _.transitivity.tense.person.formality.number ;
vb_ger: _.transitivity.ger.case ;
vblex: (if (1.tense = past)
           [ 1(vb_ger)[ger=ger_past, case=nom] + э@cop.aor.[1.person].[1.number] ]
        else
           1(vb) );
prn: _.prn_type.person.number.case.formality ;
adv: _ ;
n: _.number.poss.case ;
adj: _ ;
cop: _.tense.person.number ;

NP: _.number.poss.case ;
DP: _.number.poss.case.det_type.person ;
VP: _.transitivity.tense.person.formality.number ;
PP: _ ;
S: _ ;

!!! MACROS !!!

!!! RULES !!!

NP -> %n.$lem/sl { %1[number=(if ($number = sg) "" else $number), lemcase=$lemcase] } |
      adj %NP { 1 _1 %2 } ;

DP -> %NP [$det_type=ind] { %1 } |
      det.$det_type/sl.$lemcase/sl %NP { %2[lemcase=$lemcase] } |
      %prn.$lem/sl [$det_type=def] { %1 } |
      4: %DP PP { 2 _1 %1 } ;

PP -> 3: %pr DP { %2[case=1.lemh>case] } |
      0: %pr DP { 1 %2 } ;

VP -> %vblex.$lem/sl { %1 } ;

S -> DP %VP { 1 _1 2[number=1.number, person=1.person] } ;
